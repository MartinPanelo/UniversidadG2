/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

package com.mycompany.universidadg2.vistas;

import com.mycompany.universidadg2.entidades.Alumno;
import com.mycompany.universidadg2.persistencia.AlumnoData;
import com.mycompany.universidadg2.persistencia.Conexion;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author ezequ
 */
public class vistaAlumno extends javax.swing.JInternalFrame {
    
    Connection conexiondb = Conexion.getConexion();
    AlumnoData aData = new AlumnoData(conexiondb);

    /** Creates new form vistaAlumno */
    public vistaAlumno() {
        initComponents();
    }
    
    //Validaciones:
    public boolean validarCamposVaciosGuardar(){
     if (JTFapellido.getText().equals("") || JTFnombre.getText().equals("") || JTFdni.getText().equals("") || JDCfechadenacimiento.getDate().equals(null)) {
        return false;
    }
    return true;
   }
    public boolean validarCamposVaciosBuscar(){
        if (JTFid.getText().equals("")) {
        return false;
    }
    return true;
}
    public boolean validarCamposVaciosActualizar() {
        if (JTFapellido.getText().equals("") || JTFnombre.getText().equals("") || JTFdni.getText().equals("") || JDCfechadenacimiento.getDate().equals(null) || JTFid.getText().equals("")) {
            return false;
        }
        return true;
    }
  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPvistaAlumno = new javax.swing.JPanel();
        JLid = new javax.swing.JLabel();
        JLnombre = new javax.swing.JLabel();
        JLfechadenacimiento = new javax.swing.JLabel();
        JTFid = new javax.swing.JTextField();
        JTFnombre = new javax.swing.JTextField();
        JLestado = new javax.swing.JLabel();
        JCestado = new javax.swing.JCheckBox();
        JDCfechadenacimiento = new com.toedter.calendar.JDateChooser();
        JBTNbuscar = new javax.swing.JButton();
        JLapellido = new javax.swing.JLabel();
        JTFapellido = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        JBTNguardar = new javax.swing.JButton();
        JBTNlimpiar = new javax.swing.JButton();
        JBTNborrar = new javax.swing.JButton();
        JBTNactualizar = new javax.swing.JButton();
        JLdni = new javax.swing.JLabel();
        JTFdni = new javax.swing.JTextField();

        setClosable(true);

        JPvistaAlumno.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Formulario de alumnos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Microsoft Tai Le", 1, 18))); // NOI18N

        JLid.setText("ID");

        JLnombre.setText("Nombre");

        JLfechadenacimiento.setText("Fecha de nacimiento");

        JTFid.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                JTFidInputMethodTextChanged(evt);
            }
        });

        JLestado.setText("Estado");

        JBTNbuscar.setText("Buscar");
        JBTNbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNbuscarActionPerformed(evt);
            }
        });

        JLapellido.setText("Apellido");

        JBTNguardar.setText("Guardar");
        JBTNguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNguardarActionPerformed(evt);
            }
        });

        JBTNlimpiar.setText("Limpiar");
        JBTNlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNlimpiarActionPerformed(evt);
            }
        });

        JBTNborrar.setText("Borrar");
        JBTNborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNborrarActionPerformed(evt);
            }
        });

        JBTNactualizar.setText("Actualizar");
        JBTNactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTNactualizarActionPerformed(evt);
            }
        });

        JLdni.setText("DNI");

        javax.swing.GroupLayout JPvistaAlumnoLayout = new javax.swing.GroupLayout(JPvistaAlumno);
        JPvistaAlumno.setLayout(JPvistaAlumnoLayout);
        JPvistaAlumnoLayout.setHorizontalGroup(
            JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                        .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                                .addComponent(JLfechadenacimiento)
                                .addGap(18, 18, 18)
                                .addComponent(JDCfechadenacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPvistaAlumnoLayout.createSequentialGroup()
                                .addComponent(JLapellido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JTFapellido))
                            .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JLnombre)
                                    .addComponent(JLid))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JTFid)
                                    .addComponent(JTFnombre)
                                    .addComponent(JTFdni))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBTNbuscar)
                        .addGap(38, 38, 38))
                    .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                        .addComponent(JLestado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JCestado)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(JBTNguardar)
                        .addGap(18, 18, 18)
                        .addComponent(JBTNlimpiar)
                        .addGap(18, 18, 18)
                        .addComponent(JBTNborrar)
                        .addGap(18, 18, 18)
                        .addComponent(JBTNactualizar))
                    .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JLdni)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        JPvistaAlumnoLayout.setVerticalGroup(
            JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBTNbuscar)
                    .addComponent(JLid))
                .addGap(18, 18, 18)
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLdni)
                    .addComponent(JTFdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JLnombre)
                    .addComponent(JTFnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPvistaAlumnoLayout.createSequentialGroup()
                        .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTFapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JLapellido))
                        .addGap(18, 18, 18)
                        .addComponent(JLfechadenacimiento))
                    .addComponent(JDCfechadenacimiento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPvistaAlumnoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JCestado))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPvistaAlumnoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(JLestado)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPvistaAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBTNguardar)
                    .addComponent(JBTNlimpiar)
                    .addComponent(JBTNborrar)
                    .addComponent(JBTNactualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPvistaAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPvistaAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBTNbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNbuscarActionPerformed
        try {
        if (validarCamposVaciosBuscar()) {
        Alumno a = new Alumno();
        a = aData.buscarAlumnoPorID(Integer.parseInt(JTFid.getText()));
        JTFapellido.setText(a.getApellido());
        JTFnombre.setText(a.getNombre());
        JCestado.setSelected(a.isEstado());
        JTFdni.setText(String.valueOf(a.getDni()));
        JDCfechadenacimiento.setDate(java.sql.Date.valueOf(a.getDate()));
        } else  {
            JOptionPane.showMessageDialog(null, "Falta ingresar el id para buscar.");
        }
        } catch (NumberFormatException ex)  {
            JOptionPane.showMessageDialog(null, "El id ingresado contiene caracteres o es invalido." );
        } catch(NullPointerException err){
            JOptionPane.showMessageDialog(null, "No se pudo buscar por id porque no existe un alumno con ese id.");
        }
    }//GEN-LAST:event_JBTNbuscarActionPerformed

    private void JBTNlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNlimpiarActionPerformed
        JTFapellido.setText("");
        JTFnombre.setText("");
        JCestado.setSelected(false);
        JTFdni.setText("");
        JDCfechadenacimiento.setDate(null);
        JTFid.setText("");
    }//GEN-LAST:event_JBTNlimpiarActionPerformed

    private void JTFidInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_JTFidInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFidInputMethodTextChanged

    private void JBTNguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNguardarActionPerformed
        if (validarCamposVaciosGuardar()) {
        Alumno a = new Alumno();
        a.setApellido(JTFapellido.getText());
        a.setNombre(JTFnombre.getText());
        a.setEstado(JCestado.isSelected());
        a.setDni(Integer.parseInt(JTFdni.getText()));
        a.setDate(LocalDate.parse( new SimpleDateFormat("yyyy-MM-dd").format(JDCfechadenacimiento.getDate())));
        aData.guardarAlumno(a);
        } else  {   
            JOptionPane.showMessageDialog(null, "Faltan llenar campos");
        } 
    }//GEN-LAST:event_JBTNguardarActionPerformed

    private void JBTNborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNborrarActionPerformed
        
            try {
                if (validarCamposVaciosBuscar()) {
                aData.borrarAlumno(Integer.parseInt(JTFid.getText()));
                } else  {
                JOptionPane.showMessageDialog(null, "Falta ingresar el id para borrar al alumno.");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "El id ingresado contiene caracteres o es invalido.");
            }
        
    }//GEN-LAST:event_JBTNborrarActionPerformed

    private void JBTNactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTNactualizarActionPerformed
        if (validarCamposVaciosActualizar()) {
        Alumno a = new Alumno();
        a.setApellido(JTFapellido.getText());
        a.setNombre(JTFnombre.getText());
        a.setEstado(JCestado.isSelected());
        a.setDni(Integer.parseInt(JTFdni.getText()));
        a.setDate(LocalDate.parse( new SimpleDateFormat("yyyy-MM-dd").format(JDCfechadenacimiento.getDate())));
        a.setId_alumno(Integer.parseInt(JTFid.getText()));
        aData.actualizarAlumno(a);
        } else  {   
            JOptionPane.showMessageDialog(null, "Faltan llenar campos");
        }
        
    }//GEN-LAST:event_JBTNactualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTNactualizar;
    private javax.swing.JButton JBTNborrar;
    private javax.swing.JButton JBTNbuscar;
    private javax.swing.JButton JBTNguardar;
    private javax.swing.JButton JBTNlimpiar;
    private javax.swing.JCheckBox JCestado;
    private com.toedter.calendar.JDateChooser JDCfechadenacimiento;
    private javax.swing.JLabel JLapellido;
    private javax.swing.JLabel JLdni;
    private javax.swing.JLabel JLestado;
    private javax.swing.JLabel JLfechadenacimiento;
    private javax.swing.JLabel JLid;
    private javax.swing.JLabel JLnombre;
    private javax.swing.JPanel JPvistaAlumno;
    private javax.swing.JTextField JTFapellido;
    private javax.swing.JTextField JTFdni;
    private javax.swing.JTextField JTFid;
    private javax.swing.JTextField JTFnombre;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

}
